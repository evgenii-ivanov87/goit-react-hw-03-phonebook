{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","handleChange","e","setState","currentTarget","value","contactMatching","contacts","props","namesInPhonebook","reduce","acc","contact","numbersInPhonebook","includes","alert","handleSubmit","preventDefault","onSubmit","this","form","label","type","placeholder","onChange","input","button","Component","Filter","filter","ContactList","onDeleteContact","list","map","id","item","text","span","onClick","App","addContact","shortid","generate","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","localStorage","getItem","parselContact","JSON","parse","prevProp","console","log","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,uCCA7GD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,gKCgBhJC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,wBC0FQI,E,4MA5FbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAcVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAG1DC,gBAAkB,WAAO,IAAD,EACG,EAAKR,MAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,OACNO,EAAa,EAAKC,MAAlBD,SACFE,EAAmBF,EAASG,QAChC,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQb,SACnC,IAEIc,EAAqBN,EAASG,QAClC,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQZ,WACnC,IAGF,OACES,EAAiBK,SAASf,IAC1Bc,EAAmBC,SAASd,IAE5Be,MAAM,GAAD,OAAIhB,GAAJ,OAAWC,EAAX,6BACE,GAGI,KAATD,GAA0B,KAAXC,GACjBe,MAAM,0BACC,QAFT,G,EAMFC,aAAe,SAAAd,GAAM,IAAD,EACO,EAAKJ,MAAtBC,EADU,EACVA,KAAMC,EADI,EACJA,OAEdE,EAAEe,iBACF,EAAKd,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,KAC9B,EAAKM,mBAIT,EAAKE,MAAMU,SAASnB,EAAMC,I,4CAG5B,WACE,OACE,uBAAMkB,SAAUC,KAAKH,aAActB,UAAWC,IAAEyB,KAAhD,UACE,wBAAO1B,UAAWC,IAAE0B,MAApB,iBAEE,uBACEC,KAAK,OACLvB,KAAK,OACLM,MAAOc,KAAKrB,MAAMC,KAClBwB,YAAY,cACZC,SAAUL,KAAKlB,aACfP,UAAWC,IAAE8B,WAIjB,wBAAO/B,UAAWC,IAAE0B,MAApB,mBAEE,uBACEC,KAAK,MACLvB,KAAK,SACLM,MAAOc,KAAKrB,MAAME,OAClBuB,YAAY,YACZC,SAAUL,KAAKlB,aACfP,UAAWC,IAAE8B,WAGjB,wBAAQH,KAAK,SAAS5B,UAAWC,IAAE+B,OAAnC,gC,GArFWC,a,iBCcJC,MAdf,YAAsC,IAApBvB,EAAmB,EAAnBA,MAAOmB,EAAY,EAAZA,SACvB,OACE,wBAAO9B,UAAWC,IAAEkC,OAApB,kCAEE,uBAAOP,KAAK,OAAOjB,MAAOA,EAAOmB,SAAUA,Q,gBC4BlCM,MAjCf,YAAqD,IAA9BvB,EAA6B,EAA7BA,SAAUwB,EAAmB,EAAnBA,gBAC/B,OACE,oBAAIrC,UAAWC,IAAEqC,KAAjB,SACGzB,EAAS0B,KAAI,gBAAGC,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaN,UAAWC,IAAEwC,KAA1B,UACE,oBAAGzC,UAAWC,IAAEyC,KAAhB,UACGrC,EADH,KACWC,KAEX,sBAAMN,UAAWC,IAAE0C,OACnB,wBACEf,KAAK,SACLgB,QAAS,kBAAMP,EAAgBG,IAC/BxC,UAAWC,IAAE+B,OAHf,sBALOQ,SCgFFK,E,4MA/EbzC,MAAQ,CACNS,SAAU,GAMVsB,OAAQ,I,EAmBVW,WAAa,SAACzC,EAAMC,GAClB,IAAMY,EAAU,CACdsB,GAAIO,IAAQC,WACZ3C,OACAC,UAGF,EAAKG,UAAS,gBAAGI,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEK,GAAH,mBAAeL,S,EAI3BoC,aAAe,SAAAzC,GACb,EAAKC,SAAS,CAAE0B,OAAQ3B,EAAEE,cAAcC,S,EAG1CuC,mBAAqB,WAAO,IAAD,EAEM,EAAK9C,MAA1B+B,EAFe,EAEfA,OAAQtB,EAFO,EAEPA,SACVsC,EAAmBhB,EAAOiB,cAEhC,OACEvC,EAASsB,QAAO,SAAAjB,GAAO,OACrBA,EAAQb,KAAK+C,cAAchC,SAAS+B,O,EAI5CE,cAAgB,SAAAC,GACd,EAAK7C,UAAS,SAAA8C,GAAS,MAAK,CAC1B1C,SAAU0C,EAAU1C,SAASsB,QAAO,SAAAjB,GAAO,OAAIA,EAAQsB,KAAOc,U,uDA7ClE,WACE,IAAMpC,EAAUsC,aAAaC,QAAQ,WAC/BC,EAAgBC,KAAKC,MAAM1C,GAC7BwC,GACFjC,KAAKhB,SAAS,CAACI,SAAU6C,M,gCAK7B,SAAmBG,EAAUN,GAC3BO,QAAQC,MACJtC,KAAKrB,MAAMS,WAAa0C,EAAU1C,UAClC2C,aAAaQ,QAAQ,UAAWL,KAAKM,UAAUxC,KAAKrB,MAAMS,a,oBAqChE,WAAU,IAAD,EACsBY,KAAKrB,MAA1B+B,EADD,EACCA,OAAQtB,EADT,EACSA,SACVqD,EAAkBzC,KAAKyB,qBAC7B,OACE,qCACE,cAAC,EAAD,CAASpD,MAAM,YAAf,SACE,cAAC,EAAD,CAAM0B,SAAUC,KAAKqB,WAAYjC,SAAUA,MAE7C,eAAC,EAAD,CAASf,MAAM,WAAf,UACE,cAAC,EAAD,CAAQa,MAAOwB,EAAQL,SAAUL,KAAKwB,eACtC,cAAC,EAAD,CACEpC,SAAUqD,EACV7B,gBAAiBZ,KAAK4B,0B,GAxEhBpB,aCDlBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f3d2e050.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3abcS\",\"title\":\"Section_title__1foqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1n2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__Dz_PF\",\"label\":\"Form_label__2oGEG\",\"input\":\"Form_input__2lRkL\",\"button\":\"Form_button__wbIaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Puy-\",\"item\":\"ContactList_item__Wa6dr\",\"text\":\"ContactList_text__2G2Tz\",\"span\":\"ContactList_span__h2vQ7\",\"button\":\"ContactList_button__KzkFk\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  contactMatching = () => {\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    const namesInPhonebook = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const numbersInPhonebook = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n\r\n    if (\r\n      namesInPhonebook.includes(name) ||\r\n      numbersInPhonebook.includes(number)\r\n    ) {\r\n      alert(`${name}${number} is already in contacts`);\r\n      return true;\r\n    }\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all data');\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n\r\n    e.preventDefault();\r\n    this.setState({ name: '', number: '' });\r\n    if (this.contactMatching()) {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"Ivanov Ivan\"\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"123-12-45\"\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","  \r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.text}>\r\n            {name}: {number}\r\n          </p>\r\n          <span className={s.span}></span>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contact = localStorage.getItem('contact')\n    const parselContact = JSON.parse(contact)\n    if (parselContact) {\n      this.setState({contacts: parselContact })\n    }\n  }\n  \n\n  componentDidUpdate(prevProp, prevState) {\n    console.log()\n    if (this.state.contacts !== prevState.contacts) {\n        localStorage.setItem('contact', JSON.stringify(this.state.contacts))\n      }\n    \n  }\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {   \n    \n      const { filter, contacts } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n     \n      return (\n        contacts.filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter),\n        ));\n      };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} contacts={contacts} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}